#!/bin/bash

HOST="###"
USER="###"
PASS="###"
usr="$(whoami)"
hstn="$(hostname)"


tousr=""
tusr=""
thstn=""
usrcheck=0
nmcount=0
newbox=1




netChk() {
	clear
	
	wget -q --tries=10 --timeout=20 --spider http://google.com
	
	if [[ $? -eq 0 ]]; then
        init
	else
        printf  "\nYou appear to be offline\n\n"
	fi
}




checkUser() {

cd outbox																						

	ftp -inv $HOST <<END_SCRIPT > /tmp/usrchk.log
	user $USER $PASS
	passive
	cd  $tusr@$thstn
	get userstat
	get inbox.dat
	quit

END_SCRIPT

	res="$(cat /tmp/usrchk.log |  grep -c 'No such file or directory')"

	if [ $res -ge 2 ]; then
		echo invalid mail address $tusr@$thstn 
		echo either recheck address or invite user
		usrcheck=0
	
	else

		echo mail address $tusr@$thstn verified !
		head -n 1 userstat
		tail -n 1 userstat
		usercheck=1
	
	fi

cd ..

}


sendMail() {

	
	printf "\n|COMPOSE|\n\n"

	read -p "Enter mail address: " tousr
	tusr="$(echo $tousr | awk -F'@' '{print $1}')"
	thstn="$(echo $tousr | awk -F'@' '{print $2}')"
	checkUser  
	cd outbox        
	
	if [[ "$usercheck" == 1 ]]; then     				
	 printf "\n\n"
	    printf "|Subject|:\n\n" 
	    read subject        
	    printf "\n\n"					   
		printf "|Message|:\n\n"
		mailname="$(date +"%Y-%m-%d_%H-%M_%Z_$usr@$hstn")".mail
		timestamp="$(date +"%Y-%m-%d_%H-%M_%Z")"
		echo $mailname >> inbox.dat
		echo $timestamp >> $mailname 
		echo from $usr@$hstn >> $mailname 
		echo $subject >> $mailname 
		
		msg=$(sed '/ENDSEND/q' >> $mailname)
		
		FILE1="$(echo $mailname)"
		FILE2="inbox.dat"


		ftp -inv $HOST <<END_SCRIPT > /tmp/outbox.log
		user $USER $PASS
		passive
		cd  $tusr@$thstn
		put $FILE1 
		put $FILE2
		quit
END_SCRIPT
		
		printf "\nMail sent !\n\n"

		fi
rm inbox.dat 		
cd .. 																											
}

prepareMail() {
cd inbox	

	timestamp="$(date +"%Y-%m-%d_%H-%M_%Z")"
	
	echo Last seen $timestamp >> userstat
	
	ftp -inv $HOST  <<END_SCRIPT  > /tmp/prepare.log 
	user $USER $PASS
 	passive
	cd $usr@$hstn
	put userstat
	get inbox.dat
	quit
END_SCRIPT
	
	inboxstat="$(cat /tmp/prepare.log | grep -c "Can't open inbox.dat")"
	if [[ "$inboxstat" == 0 ]]; then
		newbox=0
		oldc="$(ls | grep -c oldinbox.dat)"
		if [[ "$oldc" == 0 ]]; then
			touch oldinbox.dat
		fi
		sort inbox.dat >> inboxs.dat
		sort oldinbox.dat >> oldinboxs.dat 
		
		comm -3 inboxs.dat oldinboxs.dat >> newmail.dat
		nmcount="$(cat newmail.dat | grep -c '@')"

		if [[ "$nmcount" != 0 ]]; then
		
			i=1

			echo "#!/bin/bash" >> getmail

			echo $HOST >> getmail
			echo $USER >> getmail
			echo $PASS >> getmail
			echo "ftp -inv $HOST  <<END_SCRIPT >> /tmp/prepare.log " >> getmail
			echo "user $USER $PASS" >> getmail
			echo "passive" >> getmail
			echo "cd $usr@$hstn" >> getmail

			while [[ "$i" -le "$nmcount" ]]; do
				
				currmail="$(sed "${i}q;d" newmail.dat )"
				echo "get $currmail" >> getmail
 				((i++))
			
			done

			echo "quit" >> getmail
			echo "END_SCRIPT" >> getmail

			chmod +x getmail
			./getmail
			
			cat inbox.dat > oldinbox.dat
			rm inbox.dat
			rm getmail oldinboxs.dat inboxs.dat newmail.dat


		else
			rm inboxs.dat oldinboxs.dat newmail.dat

		fi
	fi	
cd ..
}			

dispMail() { 
	cd inbox
	nomenu=0
	mailcount="$(ls | grep -c .mail)"
	printf "\n|MAILS|\n"
	mlchk="$(ls | grep -c mails)"
	if [[ "$mlchk" == 1 ]]; then
			rm mails
	fi

	if [[ "$newbox" == 0  ]]; then

		i=$mailcount
		wh=" - "
		j=1
		while [[ "$i" != 0 ]]; do

			currmail="$(sed "${i}q;d" oldinbox.dat )"
			mailarr[$j]="$(echo $currmail)"
			currtime="$(cat $currmail | head -n 1 )"
			currfrom="$(cat $currmail | sed "2q;d")"
			currsub="$(cat $currmail | sed "3q;d")"
			echo Mail $currfrom $wh $currsub $wh $currtime >> mails
			((i--))
			((j++))
		done

		if [[ "$nmcount" == 0 ]]; then
				printf "\n\nNo new mails\n"
				
			
			else
				if [[ "$nmcount" == 1 ]]; then
					printf "\n\n$nmcount new mail\n"
				else
					printf "\n\n$nmcount new mails\n"
				fi

		fi	

		i=1

		while [[ "$i" -le "$mailcount" ]]; do
				
				printf "\n"
				sed "${i}q;d" mails
				((i++))

			done

		printf "\n"

		read -p "Enter selection [ 1 to $mailcount ]: " choice

		if [[ $choice -ge 1 && $choice -le $mailcount ]]; then
			
			clear

			printf "\n\n"

			sed "${choice}q;d" mails

			printf "\n\n"

			cat ${mailarr[$choice]} | head -n-1 | tail -n +4

			printf "\n\n"
		
		else
			printf "\nIncorrect choice\n"

		fi	

	else
		echo "Your inbox is empty :("

	fi

cd ..	
	
}

menu()	{

	while [[ $mchoice != 3 ]]; do
		printf '\n\nT-MAIL\n\n\n<1> Compose mail\n\n<2> Inbox\n\n<3> Exit\n\n' 

		read -p 'Enter selection: ' mchoice

		if [ $mchoice -eq 1 ]
		 then
			clear
			sendMail
		elif [ $mchoice -eq 2 ] 
		 then
			clear
			prepareMail
			dispMail

		elif [ $mchoice -eq 3 ]
		 then
		     printf "\n"
		     clear
		     exit	
			
		else
			printf "\nIncorrect selection\n\n"
		fi		

		read -p 'Enter to continue'
		clear


	done


}

register() {
	timestamp="$(date +"%Y-%m-%d_%H-%M_%Z")"
cd inbox
	echo Joined on $timestamp >> userstat 
	
	ftp -inv $HOST  <<END_SCRIPT >> /tmp/reglog 
	user $USER $PASS
 	passive
	mkdir $usr@$hstn

	cd $usr@$hstn

	put userstat
	
	quit

END_SCRIPT
echo You are successfully registered !
echo Your mail id is $usr@$hstn 
cd ..
menu

}


init() {
	mainstat="$(ls -a | grep -c .rl)"
	currpath="$(pwd)"

	if [[ "$mainstat" == 0 ]];then	
		
	
		mkdir inbox outbox
		touch .rl
		register
	else
		menu	
	
	fi

}
netChk

